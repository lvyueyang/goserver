definitions:
  api.CreateAdminUserBodyDto:
    properties:
      email:
        description: 邮箱
        type: string
      name:
        description: 姓名
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    required:
    - email
    - name
    - password
    - username
    type: object
  api.CreateCaptchaReqDto:
    properties:
      captcha_key:
        description: 图形验证码的key
        type: string
      captcha_value:
        description: 输入的图形验证码
        type: string
      scenes:
        allOf:
        - $ref: '#/definitions/consts.CaptchaScenes'
        description: 使用场景， 1-注册
      type:
        allOf:
        - $ref: '#/definitions/consts.CaptchaType'
        description: 验证码类型， 1-手机 2-邮箱 Enums(1,2)
      value:
        description: 手机/邮箱账号
        type: string
    required:
    - captcha_key
    - captcha_value
    - scenes
    - type
    - value
    type: object
  api.ResetPasswordAdminUserBodyDto:
    properties:
      password:
        description: 密码
        type: string
    required:
    - password
    type: object
  api.UpdateAdminUserBodyDto:
    properties:
      name:
        description: 姓名
        type: string
    required:
    - name
    type: object
  api.adminInitRootUserBodyDto:
    properties:
      email:
        description: 邮箱
        type: string
      name:
        description: 昵称
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    required:
    - email
    - name
    - password
    - username
    type: object
  api.adminUserForgetPasswordBodyDto:
    properties:
      captcha:
        description: 邮箱验证码
        type: string
      email:
        description: 邮箱
        type: string
      password:
        description: 密码
        type: string
    required:
    - captcha
    - email
    - password
    type: object
  api.adminUserLoginBodyDto:
    properties:
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  api.adminUserLoginSuccessResponse:
    properties:
      token:
        type: string
    type: object
  api.loginBodyDto:
    properties:
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  api.loginSuccessResponse:
    properties:
      token:
        type: string
    type: object
  api.registerBodyDto:
    properties:
      captcha:
        description: 邮箱验证码
        type: string
      email:
        description: 邮箱
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    required:
    - email
    - password
    - username
    type: object
  cli.CreateModuleBody:
    properties:
      name:
        description: 模块名称
        type: string
    type: object
  consts.AdminUserStatus:
    enum:
    - 1
    - -1
    type: integer
    x-enum-comments:
      AdminUserStatusLocked: 锁定
      AdminUserStatusNormal: 正常
    x-enum-varnames:
    - AdminUserStatusNormal
    - AdminUserStatusLocked
  consts.CaptchaScenes:
    enum:
    - 1
    type: integer
    x-enum-comments:
      CaptchaScenesRegister: 注册
    x-enum-varnames:
    - CaptchaScenesRegister
  consts.CaptchaType:
    enum:
    - 1
    - 2
    type: integer
    x-enum-comments:
      CaptchaTypeEmail: 邮箱
      CaptchaTypePhone: 手机号
    x-enum-varnames:
    - CaptchaTypePhone
    - CaptchaTypeEmail
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  model.AdminUser:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      is_root:
        description: 是否是超级管理员
        type: boolean
      name:
        type: string
      password:
        type: string
      status:
        $ref: '#/definitions/consts.AdminUserStatus'
      updated_at:
        type: string
      user_name:
        type: string
    type: object
  resp.Result:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
info:
  contact: {}
  title: 男生自用 API 接口文档
  version: "1.0"
paths:
  /api/admin/auth/forget-password:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/api.adminUserForgetPasswordBodyDto'
      produces:
      - application/json
      responses:
        "200":
          description: resp
          schema:
            $ref: '#/definitions/resp.Result'
      summary: 管理后台-
      tags:
      - 管理后台-管理员用户
  /api/admin/auth/init-root-user:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/api.adminInitRootUserBodyDto'
      produces:
      - application/json
      responses:
        "200":
          description: resp
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/api.adminUserLoginSuccessResponse'
              type: object
      summary: 初始化超级管理员用户
      tags:
      - 管理后台-管理员用户
  /api/admin/auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/api.adminUserLoginBodyDto'
      produces:
      - application/json
      responses:
        "200":
          description: resp
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/api.adminUserLoginSuccessResponse'
              type: object
      summary: 用户登录
      tags:
      - 管理后台-管理员用户
  /api/admin/user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: resp
          schema:
            type: string
      summary: 管理员列表
      tags:
      - 管理后台-管理员用户
    post:
      consumes:
      - application/json
      parameters:
      - description: 管理员信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/api.CreateAdminUserBodyDto'
      produces:
      - application/json
      responses:
        "200":
          description: resp.Result
          schema:
            type: string
      summary: 管理员新增
      tags:
      - 管理后台-管理员用户
  /api/admin/user/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: 管理员信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/api.CreateAdminUserBodyDto'
      produces:
      - application/json
      responses:
        "200":
          description: 用户详情
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/model.AdminUser'
              type: object
      summary: 管理员详情
      tags:
      - 管理后台-管理员用户
    put:
      consumes:
      - application/json
      parameters:
      - description: 管理员信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/api.UpdateAdminUserBodyDto'
      produces:
      - application/json
      responses:
        "200":
          description: resp.Result
          schema:
            type: string
      summary: 管理员修改
      tags:
      - 管理后台-管理员用户
  /api/admin/user/current:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 用户详情
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/model.AdminUser'
              type: object
      summary: 当前登陆者信息
      tags:
      - 管理后台-管理员用户
  /api/admin/user/list:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: resp
          schema:
            type: string
      summary: 用户列表
      tags:
      - 管理后台-用户
  /api/admin/user/reset-password/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: 管理员信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/api.ResetPasswordAdminUserBodyDto'
      produces:
      - application/json
      responses:
        "200":
          description: resp.Result
          schema:
            type: string
      summary: 重置管理员密码
      tags:
      - 管理后台-管理员用户
  /api/auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/api.loginBodyDto'
      produces:
      - application/json
      responses:
        "200":
          description: resp
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/api.loginSuccessResponse'
              type: object
      summary: 用户登录
      tags:
      - 用户
  /api/auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/api.registerBodyDto'
      produces:
      - application/json
      responses:
        "200":
          description: resp
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/api.loginSuccessResponse'
              type: object
      summary: 用户注册
      tags:
      - 用户
  /api/captcha:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/api.CreateCaptchaReqDto'
      produces:
      - application/json
      responses:
        "200":
          description: 请求结果
          schema:
            $ref: '#/definitions/resp.Result'
      summary: 获取验证码图片
      tags:
      - 验证码
  /api/captcha/clear:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication token
        in: header
        name: X-Auth-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 请求结果
          schema:
            $ref: '#/definitions/resp.Result'
      summary: 清除过期验证码
      tags:
      - 验证码
  /api/captcha/verify/{id}:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 验证码图片
          schema:
            type: string
      summary: 获取图片验证码
      tags:
      - 验证码
  /api/cli/module/create:
    post:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: 模块名称
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/cli.CreateModuleBody'
      produces:
      - application/json
      responses:
        "200":
          description: resp
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  type: boolean
              type: object
        "500":
          description: resp
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  type: string
              type: object
      summary: 创建模块
      tags:
      - cli
swagger: "2.0"
